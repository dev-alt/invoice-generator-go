┌─────────────────────────────────────────────────────────────────────────────┐
│                                                                             │
│                    INVOICE GENERATOR - COMPLETE SETUP                       │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘

📦 PROJECT STRUCTURE
═══════════════════════════════════════════════════════════════════════════

invoice-generator-go/
│
├── 🐳 DOCKER FILES
│   ├── docker-compose.yml              # Main orchestration (all services)
│   ├── docker-compose.dev.yml          # Development overrides
│   ├── Dockerfile (backend)            # Backend container
│   ├── Dockerfile.migrate (backend)    # Migration container
│   └── Dockerfile (frontend)           # Frontend container
│
├── 💻 DEVELOPMENT SCRIPTS (WSL)
│   ├── scripts/
│   │   ├── dev-setup.sh                # Install dependencies
│   │   ├── dev-start.sh                # Start all services
│   │   ├── dev-stop.sh                 # Stop all services
│   │   ├── dev-restart.sh              # Restart services
│   │   ├── dev-check.sh                # Check status
│   │   ├── dev-logs.sh                 # View logs
│   │   ├── dev-backend.sh              # Backend only
│   │   └── dev-frontend.sh             # Frontend only
│   │
│   └── dev.ps1                         # PowerShell wrapper (Windows)
│
├── ⚙️  CONFIGURATION
│   ├── .env.example                    # Docker env template
│   ├── .env.development                # Local dev env template
│   ├── .gitignore                      # Git ignore rules
│   └── Makefile                        # Make commands
│
├── 📚 DOCUMENTATION
│   ├── README.md                       # Main documentation
│   ├── README.docker.md                # Docker guide
│   ├── DEV_README.md                   # Local dev guide
│   ├── QUICK_START.md                  # Quick reference
│   ├── GETTING_STARTED.md              # Docker quick start
│   ├── SCRIPTS_REFERENCE.md            # Script details
│   └── DEVELOPMENT_SCRIPTS_SUMMARY.md  # This file
│
├── 🔧 BACKEND (Go)
│   └── invoice-generator-backend/
│
└── 🎨 FRONTEND (Next.js)
    └── invoice-generator-frontend/


🚀 QUICK START GUIDE
═══════════════════════════════════════════════════════════════════════════

OPTION 1: DOCKER (PRODUCTION-LIKE)
─────────────────────────────────────────────────────────────────────────

  Step 1: Setup environment
    cp .env.example .env
    # Edit .env with your values

  Step 2: Build and start
    docker-compose up --build -d

  Step 3: Access
    Frontend:  http://localhost:3000
    Backend:   http://localhost:8080

  📖 Full Guide: README.docker.md


OPTION 2: LOCAL DEVELOPMENT (WSL)
─────────────────────────────────────────────────────────────────────────

  From Windows PowerShell:
    
    Step 1: Navigate to project
      cd \\wsl.localhost\Ubuntu-22.04\root\projects\invoice-generator-go
    
    Step 2: Initial setup (one-time)
      .\dev.ps1 setup
    
    Step 3: Start development
      .\dev.ps1 start
    
    Step 4: Check status
      .\dev.ps1 check
    
    Step 5: Access
      Frontend:  http://localhost:3000
      Backend:   http://localhost:8080

  From WSL Terminal:
    
    Step 1: Navigate to project
      cd /root/projects/invoice-generator-go
    
    Step 2: Make scripts executable
      chmod +x scripts/*.sh
    
    Step 3: Initial setup (one-time)
      ./scripts/dev-setup.sh
    
    Step 4: Start development
      ./scripts/dev-start.sh
    
    Step 5: Check status
      ./scripts/dev-check.sh

  📖 Full Guide: DEV_README.md


📋 COMMAND REFERENCE
═══════════════════════════════════════════════════════════════════════════

DOCKER COMMANDS (Makefile)
─────────────────────────────────────────────────────────────────────────

  make build          Build all Docker images
  make up             Start all services
  make down           Stop all services
  make logs           View logs
  make ps             List containers
  make health         Check health status
  make restart        Restart services
  make clean          Remove everything
  make backup         Backup database
  make restore        Restore database


POWERSHELL COMMANDS (Windows)
─────────────────────────────────────────────────────────────────────────

  .\dev.ps1 setup     Install dependencies (one-time)
  .\dev.ps1 start     Start all services
  .\dev.ps1 stop      Stop all services
  .\dev.ps1 restart   Restart services
  .\dev.ps1 check     Check status
  .\dev.ps1 logs      View logs
  .\dev.ps1 backend   Start backend only
  .\dev.ps1 frontend  Start frontend only
  .\dev.ps1 help      Show help


BASH COMMANDS (WSL)
─────────────────────────────────────────────────────────────────────────

  ./scripts/dev-setup.sh      Install dependencies (one-time)
  ./scripts/dev-start.sh      Start all services
  ./scripts/dev-stop.sh       Stop all services
  ./scripts/dev-restart.sh    Restart services
  ./scripts/dev-check.sh      Check status
  ./scripts/dev-logs.sh       View logs
  ./scripts/dev-backend.sh    Start backend only
  ./scripts/dev-frontend.sh   Start frontend only


🎯 WHAT GETS INSTALLED (LOCAL DEV)
═══════════════════════════════════════════════════════════════════════════

  ✅ PostgreSQL 15        Database server
  ✅ Redis 7              Caching server
  ✅ Node.js 20           Frontend runtime
  ✅ Go 1.23              Backend language
  ✅ golang-migrate       Database migration tool
  ✅ wkhtmltopdf          PDF generation tool
  ✅ npm packages         Frontend dependencies
  ✅ Go modules           Backend dependencies


🌐 SERVICE ENDPOINTS
═══════════════════════════════════════════════════════════════════════════

  Service         URL                           Port
  ─────────────────────────────────────────────────────────────────────
  Frontend        http://localhost:3000         3000
  Backend API     http://localhost:8080         8080
  PostgreSQL      localhost                     5432
  Redis           localhost                     6379


📁 LOG FILES (LOCAL DEV)
═══════════════════════════════════════════════════════════════════════════

  logs/backend.log        Backend API logs
  logs/frontend.log       Frontend Next.js logs
  logs/backend.pid        Backend process ID
  logs/frontend.pid       Frontend process ID

  View logs:
    tail -f logs/backend.log
    tail -f logs/frontend.log
    ./scripts/dev-logs.sh


🔧 ENVIRONMENT FILES
═══════════════════════════════════════════════════════════════════════════

  Docker Mode:
    .env (create from .env.example)
      - DB_PASSWORD
      - JWT_SECRET
      - CORS_ALLOWED_ORIGINS
      - NEXT_PUBLIC_API_URL

  Local Dev Mode:
    .env.development (already created)
      - POSTGRES_URL
      - REDIS_URL
      - JWT_SECRET
      - FILE_STORAGE_PATH


💡 DEVELOPMENT WORKFLOW
═══════════════════════════════════════════════════════════════════════════

  Daily Routine:
    1. Start services
       .\dev.ps1 start  OR  ./scripts/dev-start.sh

    2. Check everything is running
       .\dev.ps1 check  OR  ./scripts/dev-check.sh

    3. Work on code
       - Frontend auto-reloads on changes ✨
       - Backend needs restart after Go file changes

    4. View logs if needed
       .\dev.ps1 logs  OR  ./scripts/dev-logs.sh

    5. Stop when done
       .\dev.ps1 stop  OR  ./scripts/dev-stop.sh


  Backend Development:
    # Run in foreground for immediate feedback
    .\dev.ps1 backend  OR  ./scripts/dev-backend.sh
    
    # Make changes
    # Press Ctrl+C to stop
    # Restart to see changes


  Frontend Development:
    # Just start normally - it auto-reloads!
    .\dev.ps1 start  OR  ./scripts/dev-start.sh
    
    # Make changes
    # Changes appear automatically ✨


🐛 TROUBLESHOOTING
═══════════════════════════════════════════════════════════════════════════

  Issue: Services won't start
  Solution:
    .\dev.ps1 check          Check status
    .\dev.ps1 logs           View logs
    .\dev.ps1 restart        Restart

  Issue: Port already in use
  Solution:
    lsof -ti:3000 | xargs kill -9    # Kill port 3000
    lsof -ti:8080 | xargs kill -9    # Kill port 8080
    .\dev.ps1 start

  Issue: Database connection failed
  Solution:
    sudo -u postgres psql -c "DROP DATABASE invoice_db;"
    sudo -u postgres psql -c "DROP USER invoice_user;"
    .\dev.ps1 setup          # Or ./scripts/dev-setup.sh

  Issue: Fresh start needed
  Solution:
    .\dev.ps1 stop
    sudo service postgresql stop
    sudo service redis-server stop
    rm -f logs/*.log logs/*.pid
    .\dev.ps1 start


📚 DOCUMENTATION MAP
═══════════════════════════════════════════════════════════════════════════

  Start Here:
    README.md                           Main documentation hub

  Docker Setup:
    README.docker.md                    Complete Docker guide
    GETTING_STARTED.md                  Docker quick start

  Local Development:
    DEV_README.md                       Complete local dev guide
    QUICK_START.md                      Local dev quick start
    SCRIPTS_REFERENCE.md                Script details

  Reference:
    DEVELOPMENT_SCRIPTS_SUMMARY.md      This file
    hld.md                              High-level design


🎊 YOU'RE ALL SET!
═══════════════════════════════════════════════════════════════════════════

  Choose your path:

  🐳 DOCKER:
    cp .env.example .env
    docker-compose up --build -d
    open http://localhost:3000

  💻 LOCAL:
    .\dev.ps1 setup
    .\dev.ps1 start
    open http://localhost:3000

  🚀 START CODING!


📞 NEED HELP?
═══════════════════════════════════════════════════════════════════════════

  1. Check service status
     .\dev.ps1 check  OR  ./scripts/dev-check.sh

  2. View logs
     .\dev.ps1 logs  OR  ./scripts/dev-logs.sh

  3. Read documentation
     See 📚 DOCUMENTATION MAP above

  4. Restart services
     .\dev.ps1 restart  OR  ./scripts/dev-restart.sh


═══════════════════════════════════════════════════════════════════════════
                        Happy Coding! 🚀
═══════════════════════════════════════════════════════════════════════════
